openapi: 3.0.1
info:
  title: Weight-loss Grapher
  description: >-
    This API will allow my [weight-loss
    website](https://weight.james-farrell.com) to get data from a
    MySQL database. It provides a simple RESTful api to interface with. Checkout the [GitHub](https://github.com/farrej10/weight-loss-web-ui).
    
     Sample login:
     >- user_id: 33
     >- email: test@test.com
     >- password: KWS4FOID9o
     
     Simplest way to get started is to click the authorize button on the left and enter the user_id and password in the basicAuth section then click authorize, finally use the **GET** **/auth** method to get your cookie token. From there you can use any of the none admin methods. **NOTE CHANGES TO THIS USER WILL BE RESET ONCE A DAY** if you'd like your own account reach out to me on [GitHub](https://github.com/farrej10).
     
     For more information read the information in the individual methods.
  version: 1.0.0
servers:
  - url: 'https://weight.james-farrell.com/api'
tags:
  - name: Auth
    description: Methods of Auth
  - name: User
    description: Operations about user
  - name: Weights
    description: Operations about Weights

paths:
  /auth:
    post:
      tags:
      - Auth
      summary: Logs in and returns the authentication  cookie
      requestBody:
        required: true
        description: A JSON object containing the login and password.
        content:
          application/json:
            schema:
              type: object
              properties:
               email: 
                type: string
                example: test@test.com
               pass: 
                type: string
                example: KWS4FOID9o
      security: []    # no authentication
      responses:
        '200':
          description: >
            Successfully authenticated.
            The session ID is returned in a cookie named `token`. You need to include this cookie in subsequent requests.
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: token=abcde12345; Secure; HttpOnly; Path=/ 
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
    get:
      tags:
      - Auth
      summary: Logs in using http Basic Auth and returns the authentication  cookie
      description: >
        This method uses user_id instead email when authenticating.
      security: 
      - basicAuth: []
      responses:
        '200':
          description: >
            Successfully authenticated.
            The session ID is returned in a cookie named `token`. You need to include this cookie in subsequent requests.
          headers: 
            Set-Cookie:
              schema: 
                type: string
                example: token=abcde12345; Secure; HttpOnly; Path=/
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
  /user:
    get:
      security:
        - cookieAuth: []
      tags:
        - User
      summary: Gets all users.
      description: "Must be an **admin** to perform this action, can be filtered by name."
      operationId: getUserList
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: The name you wish to filter by.
      responses:
        '200':
          description: Successful operation
          headers: 
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /user/{user_id}:
    get:
      security:
        - cookieAuth: []
      tags:
        - User
      summary: Gets a user by ID.
      description: >
        This method gets user data by the user_id. You can only get your own users information unless you are an **admin**
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          headers: 
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      security:
        - cookieAuth: []
      tags:
        - User
      summary: Deletes a user by ID.
      description: >
        This method will delete a user and any associated weight data. **Must be an admin**
      operationId: deleteUserById
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful operation
          headers: 
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Successfully Deleted"
  /user/{user_id}/weights:
    get:
      security:
        - cookieAuth: []
      tags:
        - Weights
      summary: Gets list of weights for user.
      description: >
        This method returns all the weights associated with a user. You can only get your own users information unless you are an **admin** 
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
            example: 33
        - in: query
          name: start
          schema:
            type: string
          description: This parameter allows filtering from that date.
        - in: query
          name: end
          schema:
            type: string
          description: This parameter allows filtering till that date.
      responses:
        '200':
          description: Successful operation
          headers: 
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weight'
                  
  /user/{user_id}/weights/{timestamp}:
    get:
      security:
        - cookieAuth: []
      tags:
        - Weights
      summary: Gets single weight for user.
      description: >
        This method returns a single weight associated with a user at that timestamp. You can only get your own users information unless you are an **admin**
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
            example: 33
        - name: timestamp
          in: path
          description: Timestamp
          required: true
          schema:
            type: string
            example: "2021-04-01 00:00:00"    
      responses:
        '200':
          description: Successful operation
          headers: 
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weight'
    delete:
      security:
        - cookieAuth: []
      tags:
        - Weights
      summary: Deletes single weight for user.
      description: >
        This method deletes a single weight associated with a user at that timestamp. You can only delete your own users information unless you are an **admin**
      parameters:
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
            format: int64
            example: 33
        - name: timestamp
          in: path
          description: Timestamp
          required: true
          schema:
            type: string
            example: "2021-02-12T21:57:10"    
      responses:
        '200':
          description: Successful operation
          headers: 
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weight'    
                  
  /current-user:
    get:
      security:
        - cookieAuth: []
      tags:
        - User
      summary: Gets current user details.
      description: >
        This method will return the current user details based on the clients cookie.
      operationId: getcurrentUser
      responses:
        '200':
          description: Successful operation
          headers: 
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /weights:
    get:
      security:
        - cookieAuth: []
      tags:
        - Weights
      summary: Gets all weights for all users. You can only get your own users information unless you are an **admin**
      parameters:
        - in: query
          name: user_id
          schema:
            type: integer
          description: This parameter allows filtering by user_id.
        - in: query
          name: name
          schema:
            type: string
          description: This parameter allows filtering by name of user.
        - in: query
          name: start
          schema:
            type: string
          description: This parameter allows filtering from that date.
        - in: query
          name: end
          schema:
            type: string
          description: This parameter allows filtering till that date.
      responses:
        '200':
          description: Successful operation
          headers: 
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weight'
    post:
      summary: Creates a new weight for a user. You can only get your own users information unless you are an **admin**
      tags:
        - Weights
      requestBody:
        required: true
        description: A JSON object containing the weight data.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weight'
      security: 
        - cookieAuth: []    # no authentication
      responses:
        '201':
          description: >
            After a successful creation the object is returned
          headers: 
            X-RateLimit-Limit:
              schema:
                type: integer
              description: Request limit per hour.
            X-RateLimit-Remaining:
              schema:
                type: integer
              description: The number of requests left for the time window.
            X-RateLimit-Reset:
              schema:
                type: integer
              description: Time in Unix time till reset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Weight'
          
          

components:
  schemas:
    User:
      type: object
      required:
        - user_id
        - name
        - email
        - admin
      properties:
        user_id:
          type: integer
          example: 33
        name:
          type: string
          example: Test User
        email:
          type: string
          example: test@test.com
        admin:
          type: integer
          example: 0
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://weight.james-farrell.com/api/user/33

    Weight:
      required:
        - user_id
        - weight
      type: object
      properties:
        user_id:
          type: integer
          example: 33
        timestamp:
          type: string
          example: "2021-04-01 00:00:00"
        weight:
          type: number
          example: 75.0
        _links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  example: https://weight.james-farrell.com/api/user/33/weights/2021-04-01T00:00:00
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
